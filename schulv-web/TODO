
$Id: TODO,v 1.2 2002/02/15 20:58:13 azzit Exp $


dispatcher rewrite   *** DONE ***

request handler rewrite  *** DONE ***

,--->
| löchen von childs muss effektiv möglich sein
| beispiel: <input type="bla">
| 				<length_e>bla</length_e>
| 		  </input>
| 
| 		  wird (da length_e nicht in html umgewandelt
| 		  wird):
| 
| 		  <input type="bla">
| 
| 		  </input>
| 
| 		  da die newlines usw. chardata sind, schicker
| 		  wäre es wenn da nachher
| 
| 		  <input type="bla"/>
| 
| 		  stehen würde
`---------->  *** DONE ***

,------->
| die elemente werden angelegt im formx_form objekt
| das show_element sollte ausgelassen werden, da das
| die domxml struktur zerstören würde, wir müssen
| also selber anzeigen...das läuft weitestgehend
| aber ungetestet. was rein muss ist das die felder
| aus der session vorausgefüllt werden if possible.
-----------> *** DONE ***

,-------->
| was auch noch fehlt ist der komplette kram der
| zwischen den seiten passiert, also das storing
| in die session. next_page usw. vieles davon geht
| über den pre_dispatch und post_dispatch handler
| die beide noch zu implementieren sind...sollte
| aber kein stress sein.
`-----------> partly done

* steht der ganze kram sind noch die page types zu
  implementieren, probleme könnte da "summary"
  machen. da sollten wir uns was anderes überlegen.

* weil jeder tag-handler seine kinder selbst in einer _translate_tree() rekursion
  handlen muss, kann register_tags() umgebaut werden, sodass context-based
  tag-recognition aufgebaut und damit eine "validating-xml" variante "fuer arme"
  implementiert werden kann (dazu muss register_tags einfach nur einen stack
  pflegen und der tag-lookup eben diesen stack top-down nach dem ersten vorkommen
  des gesuchten namens scannen). dadurch wird auch ermoeglicht, dass 2 module das
  gleiche tag -- je nach context -- verwenden koennen.

* depends_on usw. tut noch nicht fuer abhaengigkeiten zwischen mehreren
  formx-seiten.






